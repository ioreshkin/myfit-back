version: "3.9"
services:
  postgres:
    image: nexus.fitcycle.online/postgres
    container_name: postgres
    restart: on-failure
    env_file: .env-postgres
    healthcheck:
      test: pg_isready -d fit
      interval: 5s
      timeout: 33s
      retries: 3
      start_period: 5s
    volumes:
      - ./dbdata:/var/lib/postgresql/data

  app-db:
    image: nexus.fitcycle.online/postgres
    container_name: app-db
    restart: on-failure
    env_file: .env-app-db
    ports:
      - 5432:5432
    healthcheck:
      test: pg_isready -d fit
      interval: 5s
      timeout: 33s
      retries: 3
      start_period: 5s
  #    volumes:
  #      - ./appdata:/var/lib/postgresql/data

  keycloak:
    image: nexus.fitcycle.online/keycloak
    container_name: keycloak
    command: [ "start", "--db", "postgres", "--hostname-strict-https", "false",  "--hostname-strict", "false",  "--proxy", "edge", "--http-enabled", "true", "--import-realm",  "--spi-user-profile-legacy-user-profile-read-only-attributes", "*_RES_ACCESS_MODE" ]
    env_file: .env-keycloak
    ports:
      - 8080:8080
    depends_on:
      postgres:
        condition: service_healthy

#  app:
#    build: .
#    container_name: backend
#    environment:
#      ISSUER_URI: http://keycloak:8080/realms/myfit
#      CORS_URL: http://localhost:8333
#    ports:
#      - 8888:8888
#    depends_on:
#      app-db:
#        condition: service_healthy
#      keycloak:
#        condition: service_started

volumes:
  dbdata:
    driver: local